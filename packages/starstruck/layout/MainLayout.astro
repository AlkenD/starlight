---
import type { MarkdownHeading } from 'astro';
import type { Route } from '../utils/routing';

import config from 'virtual:starstruck/user-config';
import HeadSEO from '../components/HeadSEO.astro';
import ThemeProvider from '../components/ThemeProvider.astro';
import Header from '../components/Header.astro';
import Hero from '../components/Hero.astro';
import SideBar from '../components/SideBar/SideBar.astro';
import { getSidebar } from '../utils/navigation';

import 'virtual:starstruck/user-css';
import RightSidebar from '../components/RightSidebar.astro';
import FallbackContentNotice from '../components/FallbackContentNotice.astro';
import Footer from '../components/Footer.astro';

type Props = Route & { headings: MarkdownHeading[] };

const { dir, entry, entryMeta, headings, isFallback, lang, locale } = Astro.props;
const sidebar = getSidebar(Astro.url.pathname, locale);

const hasSidebar = entry.data.template !== 'splash';
const tocConfig = !hasSidebar
	? false
	: entry.data.tableOfContents !== undefined
	? entry.data.tableOfContents
	: config.tableOfContents;
const hasToC = Boolean(tocConfig);
const hasHero = Boolean(entry.data.hero);
const pagefindEnabled =
	entry.slug !== '404' && !entry.slug.endsWith('/404') && entry.data.pagefind !== false;
---

<!DOCTYPE html>
<html
	lang={lang}
	dir={dir}
	data-has-toc={hasToC}
	data-has-sidebar={hasSidebar}
	data-has-hero={hasHero}
>
	<head>
		<HeadSEO data={entry.data} lang={lang} />
	</head>
	<body class="dark:text-white dark:bg-black">
		<div
			class="fixed top-0 w-full h-full bg-no-repeat bg-cover"
			style={`background-image: url('${config.background?.src}'); opacity: ${
				hasSidebar ? '0.5' : '1'
			}`}
		>
		</div>
		<ThemeProvider />
		<!-- <SkipLink {locale} /> -->
		<div class="h-full relative">
			<Header {locale} {hasSidebar} />
			<main
				class="container mx-auto mt-14 space-x-6"
				class:list={[entry.data.hero ? 'w-full' : 'flex w-full']}
				data-pagefind-body={pagefindEnabled}
				lang={entryMeta.lang}
				dir={entryMeta.dir}
			>
				{hasSidebar && <SideBar {sidebar} {locale} />}
				{
					entry.data.hero ? (
						<div>
							<Hero hero={entry.data.hero} fallbackTitle={entry.data.title} />
							<slot />
						</div>
					) : (
						<div class="flex-1 h-fit min-w-0">
							<div class="prose prose-zinc dark:prose-invert max-w-none prose-headings:pt-4 prose-h2:border-t prose-headings:border-zinc-500/50  prose-headings:before:text-underline-animation h-full">
								<div>
									<h1 class="text-4xl m-0" id="_top" data-page-title>
										{entry.data.title}
									</h1>
									{isFallback && <FallbackContentNotice {locale} />}
								</div>
								<slot />
							</div>
							<Footer {...{ entry, dir, locale, sidebar }} />
						</div>
					)
				}
				{hasSidebar && <RightSidebar {lang} {entry} {headings} {locale} {tocConfig} />}
			</main>
		</div>
		<style>
			.text-underline-animation {
				@apply content-[""] absolute block w-full h-0.5 bg-black origin-top-left transition-transform duration-[0.3s] ease-[ease] scale-x-0 left-0 bottom-0;
			}
			.gradiant-background:before {
				content: ' ';
				display: block;
				position: absolute;
				left: 0;
				top: 0;
				width: 100%;
				height: 100%;
				opacity: 0.2;
				background-repeat: no-repeat;
				background-position: 50% 0;
				background-size: cover;
				pointer-events: none;
			}
		</style>
	</body>
</html>
