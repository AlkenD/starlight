---
import { Icon } from '../../components';
import { flattenSidebar, type SidebarEntry } from '../../utils/navigation';
import Badge from '../Badge.astro';

interface Props {
	sublist: SidebarEntry[];
	nested?: boolean;
}

const { sublist, nested = false } = Astro.props;
---

<ul
	class:list={[nested && 'border-l border-zinc-500/20 dark:border-zinc-500/50 space-y-2.5']}
	class="text-zinc-600 dark:text-zinc-400 font-light text-sm"
>
	{
		sublist.map((item) => (
			<>
				{item.type === 'link' ? (
					<li>
						<div
							class="px-4 w-full border-l border-transparent -ml-[1px] hover:border-black dark:hover:border-white hover:text-black dark:hover:text-white"
							class:list={[
								item.isCurrent &&
									'border-black dark:border-white font-semibold text-black dark:text-white',
							]}
						>
							<a aria-current={item.isCurrent && 'page'} href={item.href}>
								{item.label}
								{item.badge && (
									<>
										{' '}
										<Badge
											text={item.badge.text}
											variant={item.isCurrent ? 'outline' : item.badge.variant}
										/>
									</>
								)}
							</a>
						</div>
					</li>
				) : (
					<li>
						<details
							class="space-y-2 mb-4"
							open={flattenSidebar(item.entries).some((i) => i.isCurrent) || !item.collapsed}
						>
							<summary class="flex items-center justify-between text-black dark:text-white font-semibold">
								<span>{item.label}</span>
								<Icon
									name="right-caret"
									class="caret hover:cursor-pointer rounded-full p-1 hover:bg-zinc-400/20 transition-transform ease-out"
									size="1.5rem"
								/>
							</summary>
							<div>
								<Astro.self sublist={item.entries} nested />
							</div>
						</details>
					</li>
				)}
			</>
		))
	}
</ul>

<style>
	[open] > summary .caret {
		@apply rotate-90;
	}
</style>
