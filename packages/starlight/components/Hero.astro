---
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import CallToAction from './CallToAction.astro';

interface Props {
	fallbackTitle: string;
	hero: NonNullable<CollectionEntry<'docs'>['data']['hero']>;
}

const { title = Astro.props.fallbackTitle, tagline, image, actions } = Astro.props.hero;

const imageAttrs = {
	loading: 'eager' as const,
	decoding: 'async' as const,
	width: 400,
	height: 400,
	alt: image?.alt,
};
---

<div class="flex-col-reverse lg:flex-row flex px-10 py-10 lg:py-20 justify-between">
	<div class="space-y-10 lg:my-auto">
		<div class="space-y-4 text-center lg:text-left">
			<h1 class="text-6xl font-bold" id="_top" data-page-title set:html={title} />
			{tagline && <div class="text-lg" set:html={tagline} />}
		</div>
		{
			actions.length > 0 && (
				<div class="flex space-x-4 justify-center lg:justify-start">
					{actions.map(({ text, ...attrs }) => (
						<CallToAction {...attrs} set:html={text} />
					))}
				</div>
			)
		}
	</div>
	<div class="mx-auto lg:mx-0 lg:my-auto">
		{
			image?.file ? (
				image.file.format === 'svg' ? (
					<img class="max-w-[300px] lg:max-w-fit" src={image.file.src} {...imageAttrs} />
				) : (
					<Image
						class="max-w-[300px] lg:max-w-fit"
						src={image.file as ImageMetadata}
						{...imageAttrs}
					/>
				)
			) : (
				image?.html && <div set:html={image.html} />
			)
		}
	</div>
</div>
