---
import { Icon } from '../../components';
import { flattenSidebar, type SidebarEntry } from '../../utils/navigation';
import Badge from '../Badge.astro';

interface Props {
	sublist: SidebarEntry[];
	nested?: boolean;
}

const { sublist } = Astro.props;
---

<ul class="space-y-4">
	{
		sublist.map((item) => (
			<li class="text-zinc-600 dark:text-zinc-400 font-light text-sm">
				{item.type === 'link' ? (
					<a
						aria-current={item.isCurrent && 'page'}
						class:list={[
							item.isCurrent
								? 'font-semibold border-black text-black dark:border-white dark:text-white'
								: 'border-zinc-200 dark:border-zinc-800 hover:border-black hover:text-black dark:hover:border-white dark:hover:text-white',
						]}
						class="pl-4 -ml-[1px] border-l py-1"
						href={item.href}
					>
						{item.label}
						{item.badge && (
							<>
								{' '}
								<Badge
									text={item.badge.text}
									variant={item.isCurrent ? 'outline' : item.badge.variant}
								/>
							</>
						)}
					</a>
				) : (
					<details
						class="space-y-2"
						open={flattenSidebar(item.entries).some((i) => i.isCurrent) || !item.collapsed}
					>
						<summary class="flex items-center justify-between text-black dark:text-white font-semibold">
							<span>{item.label}</span>
							<Icon
								name="right-caret"
								class="caret hover:cursor-pointer rounded-full p-1 hover:bg-zinc-400/20 transition-transform ease-out"
								size="1.5rem"
							/>
						</summary>
						<div class="border-l border-zinc-200 dark:border-zinc-800">
							<Astro.self sublist={item.entries} nested />
						</div>
					</details>
				)}
			</li>
		))
	}
</ul>

<style>
	[open] > summary .caret {
		@apply rotate-90;
	}
</style>
