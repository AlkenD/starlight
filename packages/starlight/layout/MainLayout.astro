---
import type { MarkdownHeading } from 'astro';
import type { Route } from '../utils/routing';

import config from 'virtual:starstruck/user-config';
import HeadSEO from '../components/HeadSEO.astro';
import SkipLink from '../components/SkipLink.astro';
import ThemeProvider from '../components/ThemeProvider.astro';
import Header from '../components/Header.astro';
import Hero from '../components/Hero.astro';
import SideBar from '../components/SideBar/SideBar.astro';
import { getSidebar } from '../utils/navigation';

import 'virtual:starstruck/user-css';
import RightSidebar from '../components/RightSidebar.astro';
import FallbackContentNotice from '../components/FallbackContentNotice.astro';

type Props = Route & { headings: MarkdownHeading[] };

const { dir, entry, entryMeta, headings, isFallback, lang, locale } = Astro.props;
const sidebar = getSidebar(Astro.url.pathname, locale);

const hasSidebar = entry.data.template !== 'splash';
const tocConfig = !hasSidebar
	? false
	: entry.data.tableOfContents !== undefined
	? entry.data.tableOfContents
	: config.tableOfContents;
const hasToC = Boolean(tocConfig);
const hasHero = Boolean(entry.data.hero);
const pagefindEnabled =
	entry.slug !== '404' && !entry.slug.endsWith('/404') && entry.data.pagefind !== false;
---

<!DOCTYPE html>
<html
	lang={lang}
	dir={dir}
	data-has-toc={hasToC}
	data-has-sidebar={hasSidebar}
	data-has-hero={hasHero}
>
	<head>
		<HeadSEO data={entry.data} lang={lang} />
	</head>
	<body
		class:list={[hasSidebar && 'h-screen overflow-hidden']}
		class="bg-no-repeat bg-cover bg-white dark:bg-black dark:text-white bg-opacity-0"
		style=`background-image: url(${entry.data.background?.file?.src})`
	>
		<ThemeProvider />
		<!-- <SkipLink {locale} /> -->
		<div class="h-full">
			<Header {locale} {hasSidebar} />
			<div class:list={[entry.data.hero ? 'w-full' : 'flex w-full h-[calc(100vh-56px)]', ,]}>
				{hasSidebar && <SideBar {sidebar} {locale} />}
				{
					entry.data.hero ? (
						<>
							<Hero hero={entry.data.hero} fallbackTitle={entry.data.title} />
							<slot />
						</>
					) : (
						<div class="flex-1 p-6 prose prose-zinc dark:prose-invert max-w-none prose-headings:before:content-['#_'] overflow-scroll">
							<div class="border-b py-4 border-zinc-800">
								<h1 class="text-4xl m-0" class="border-b" id="_top" data-page-title>
									{entry.data.title}
								</h1>
								{isFallback && <FallbackContentNotice {locale} />}
							</div>
							<slot />
						</div>
					)
				}

				{hasSidebar && <RightSidebar {headings} {locale} {tocConfig} />}
			</div>
		</div>
	</body>
</html>
